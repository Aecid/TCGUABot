@page
@using TCGUABot.Data.Models
@model IndexModel
@inject UserManager<Data.Models.ApplicationUser> UserManager
@inject ApplicationDbContext Context

@{
    ViewData["Title"] = "Home page";
    var decks = Context.Decks.Where(d => d.UserId=="d34f08f5-9daa-46d6-a87c-cc3a6fda538a").OrderByDescending(p => p.CreationDate).Take(5);
    ApplicationUser user;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    @if (!User.Identity.IsAuthenticated)
    {
        user = Context.Users.FirstOrDefault(u => u.Id == "d34f08f5-9daa-46d6-a87c-cc3a6fda538a");
    }
    else
    {
        user = await UserManager.GetUserAsync(User);
        <p>Email: @User.Identity.Name</p>

        var logins = await UserManager.GetLoginsAsync(user);
        var telegramId = logins.Any(l => l.LoginProvider.Equals("Telegram")) ? logins.FirstOrDefault(l => l.LoginProvider.Equals("Telegram")).ProviderKey : null;
        if (telegramId != null)
        {
            <p>Telegram Id: @telegramId</p>
        }
    }
</div>
<div>
    <p>
        <a asp-page="Decks/Create">Add Deck</a><h3>5 last decks</h3>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Decklist
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in decks)
            {
                <tr>
                    <td>
                        <h4>@Html.DisplayFor(modelItem => item.Name)</h4>
                        <h7>@Html.DisplayFor(modelItem => item.CreationDate)</h7>
                    </td>
                    <td>
                        @Html.Raw(IndexModel.ToShortDeck(item.Cards?.ToString()))
                    </td>
                    <td>
                        <a asp-page="./Decks/Details" asp-route-id="@item.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
