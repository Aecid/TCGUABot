@page
@model TCGUABot.Pages.Tournaments.CreateModel
@inject UserManager<Data.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Tournament</h4>
@if (User.Identity.IsAuthenticated)
{
    var user = await UserManager.GetUserAsync(User);
    <a class="btn btn-sm btn-primary beleren" href="/Tournament/CreateDefaultTournament?type=sat&creator=@user.Id">Saturday Modern Tournament</a>
    <a class="btn btn-sm btn-primary beleren" href="/Tournament/CreateDefaultTournament?type=sun&creator=@user.Id">Sunday Limited Tournament</a>
}
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Tournament.PlannedDate" class="control-label"></label>
                <input asp-for="Tournament.PlannedDate" class="form-control" />
                <span asp-validation-for="Tournament.PlannedDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tournament.Name" class="control-label"></label>
                <input asp-for="Tournament.Name" class="form-control" />
                <span asp-validation-for="Tournament.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tournament.Description" class="control-label"></label>
                <input asp-for="Tournament.Description" class="form-control" />
                <span asp-validation-for="Tournament.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tournament.EntryFee" class="control-label"></label>
                <input asp-for="Tournament.EntryFee" class="form-control" />
                <span asp-validation-for="Tournament.EntryFee" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tournament.Rewards" class="control-label"></label>
                <input asp-for="Tournament.Rewards" class="form-control" />
                <span asp-validation-for="Tournament.Rewards" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Tournament.IsLocked" /> @Html.DisplayNameFor(model => model.Tournament.IsLocked))
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Tournament.IsClosed" /> @Html.DisplayNameFor(model => model.Tournament.IsClosed))
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a>Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
