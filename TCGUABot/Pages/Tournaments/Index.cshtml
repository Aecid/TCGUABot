@page
@model TCGUABot.Pages.Tournaments.IndexModel
@inject UserManager<Data.Models.ApplicationUser> UserManager
@inject ApplicationDbContext Context

@{
    ViewData["Title"] = "Tournaments";
    var tabIndex = 0;
}

<h4 class="beleren">Tournaments</h4>

<p>
    <a asp-page="Create">Create New</a>
</p>
<div class="tournaments-container">
    @foreach (var item in Model.Tournament)
    {
    <div class="single-tournament">
        <a class="edit-tournament" asp-page="./Edit" asp-route-id="@item.Id">📝</a>
        <a class="delete-tournament" asp-page="./Delete" asp-route-id="@item.Id">❌</a>

        <div>
            <a class="tournament-name" asp-page="./Details" asp-route-id="@item.Id">@Html.Raw(string.Format("{0:ddd, dd'/'MM'/'yy HH:mm}", item.PlannedDate)) - @Html.DisplayFor(modelItem => item.Name)</a>
        </div>
        @if (!string.IsNullOrEmpty(item.EntryFee))
        {
        var entryFee = item.EntryFee.Contains("бесплатно", StringComparison.InvariantCultureIgnoreCase) ? "🔥<i>бесплатно!</i>🔥":item.EntryFee;
        entryFee = item.EntryFee.Equals("0") ? "🔥бесплатно!🔥" : item.EntryFee;
        <div>
            <b>Стоимость участия: </b>@entryFee
        </div>
        }
        @if (!string.IsNullOrEmpty(item.Rewards))
        {
        <div>
            <b>Призы: </b>@Html.DisplayFor(modelItem => item.Rewards)
        </div>
        }
        <div class="alert-warning">
            @{ if (DateTime.Compare(item.PlannedDate, TimeService.GetLocalTime()) < 0)
                {
                <text>Турнир уже начался!</text>
                }
            }
        </div>
        <div id="players-@item.Id">
            <i>@item.RegisteredPlayers.Count players</i>
            <ul>
                @{ foreach (var player in item.RegisteredPlayers)
                    {
                        var status = @player.EmojiStatus ?? "🧙‍♂️";
                    <li>@status&nbsp;@Html.Raw(player.Name.Replace(" ", "&nbsp;"))</li>
                    }
                }
            </ul>
        </div>
        <div>
            @if (User.Identity.IsAuthenticated)
            {
                var user = await UserManager.GetUserAsync(User);

                if (Context.UserLogins.Any(u => u.UserId == user.Id && u.LoginProvider == "Telegram"))
                {
            <a class="btn btn-sm btn-primary beleren" tabindex="@{++tabIndex;}@tabIndex" onclick="OnRegisterClick('@item.Id', '@user.Id')">Register/Unregister</a>
                }
            }
        </div>
    </div>
        <hr />

    }
</div>

<h4 class="beleren">Old tournaments:</h4>
<ul>
    @foreach (var item in Model.OutdatedTournament)
    {
        <li><a asp-page="./Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.PlannedDate) - @Html.DisplayFor(modelItem => item.Name)</a></li>
    }
</ul>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function OnRegisterClick(tourneyId, playerId) {
            RegUnreg(tourneyId, playerId);
        }

        async function RegUnreg(tourneyId, playerId) {
            var response = await fetch('/Tournament/TogglePlayerParticipation?tourneyId=' + tourneyId + '&playerId=' + playerId)
            if (response.ok) {
                UpdatePreview(tourneyId);
            }
        }

        async function UpdatePreview(tourneyId) {
            var response = await fetch('/Tournament/GetTournamentPlayers?tourneyId=' + tourneyId);

            if (response.ok) {
                response.json()
                    .then(function (data) {
                        var buffer = "<i>" + data.length + " players</i><ul>";
                        for (var i = 0; i < data.length; i++) {
                            buffer += "<li>" + data[i] + "</li>";
                        }
                        buffer += "</ul>"
                        document.getElementById("players-" + tourneyId).innerHTML = buffer;
                    });
            }
            else {
                document.getElementById("error").innerHtml = "<span>Deck validation error!</span>"
            }
        }
    </script>
}